/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_EMBEDDEDMESSAGES_STATUS_PB_H_INCLUDED
#define PB_EMBEDDEDMESSAGES_STATUS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _BoardStatus {
    int32_t free_mem_kb;
    int32_t status;
} BoardStatus;


/* Initializer values for message structs */
#define BoardStatus_init_default                 {0, 0}
#define BoardStatus_init_zero                    {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define BoardStatus_free_mem_kb_tag              1
#define BoardStatus_status_tag                   2

/* Struct field encoding specification for nanopb */
#define BoardStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    free_mem_kb,       1) \
X(a, STATIC,   SINGULAR, INT32,    status,            2)
#define BoardStatus_CALLBACK NULL
#define BoardStatus_DEFAULT NULL

extern const pb_msgdesc_t BoardStatus_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define BoardStatus_fields &BoardStatus_msg

/* Maximum encoded size of messages (where known) */
#define BoardStatus_size                         22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
